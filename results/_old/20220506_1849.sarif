{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "dos_number"
        },
        {
          "kind": "contract",
          "name": "auction"
        },
        {
          "kind": "contract",
          "name": "dos_simple"
        },
        {
          "kind": "contract",
          "name": "dos_address"
        },
        {
          "kind": "contract",
          "name": "send_loop"
        },
        {
          "kind": "contract",
          "name": "list_dos"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {
                    "text": "array.length+=1"
                  },
                  "startColumn": 16,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_ARRAY_LENGTH_MANIPULATION"
          },
          "ruleId": "Arithmetic_13"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {
                    "text": "^"
                  },
                  "startColumn": 16,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_PRAGMAS_VERSION"
          },
          "ruleId": "Ignore_28"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {
                    "text": "uintnumElements=0;"
                  },
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {
                    "text": "uint[]array;"
                  },
                  "startColumn": 4,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {
                    "text": "^"
                  },
                  "startColumn": 16,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_PRAGMAS_VERSION"
          },
          "ruleId": "Ignore_28"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {
                    "text": "send(currentBid)"
                  },
                  "startColumn": 33,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_SEND"
          },
          "ruleId": "UncheckedLowCalls_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functionbid()payable{require(msg.value>currentBid);if(currentFrontrunner!=0){require(currentFrontrunner.send(currentBid));}currentFrontrunner=msg.sender;currentBid=msg.value;}"
                  },
                  "startColumn": 2,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {
                    "text": "addresscurrentFrontrunner;"
                  },
                  "startColumn": 2,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {
                    "text": "uintcurrentBid;"
                  },
                  "startColumn": 2,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_simple.sol"
                },
                "region": {
                  "snippet": {
                    "text": "^"
                  },
                  "startColumn": 16,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_PRAGMAS_VERSION"
          },
          "ruleId": "Ignore_28"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_simple.sol"
                },
                "region": {
                  "snippet": {
                    "text": "address[]listAddresses;"
                  },
                  "startColumn": 4,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "snippet": {
                    "text": "^"
                  },
                  "startColumn": 16,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_PRAGMAS_VERSION"
          },
          "ruleId": "Ignore_28"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "snippet": {
                    "text": "address[]creditorAddresses;"
                  },
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "snippet": {
                    "text": "boolwin=false;"
                  },
                  "startColumn": 4,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {
                    "text": "0x79B483371E87d664cd39491b5F06250165e4b184"
                  },
                  "startColumn": 29,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_ADDRESS_HARDCODED"
          },
          "ruleId": "Ignore_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {
                    "text": "0x79B483371E87d664cd39491b5F06250165e4b185"
                  },
                  "startColumn": 29,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_ADDRESS_HARDCODED"
          },
          "ruleId": "Ignore_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {
                    "text": "for(uintx;x<refundAddresses.length;x++){require(refundAddresses[x].send(refunds[refundAddresses[x]]));}"
                  },
                  "startColumn": 8,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_EXTRA_GAS_IN_LOOPS"
          },
          "ruleId": "Ignore_25"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {
                    "text": "for(uintx;x<refundAddresses.length;x++){require(refundAddresses[x].send(refunds[refundAddresses[x]]));}"
                  },
                  "startColumn": 8,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_GAS_LIMIT_IN_LOOPS"
          },
          "ruleId": "DenialService_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {
                    "text": "private"
                  },
                  "startColumn": 10,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
          },
          "ruleId": "Ignore_29"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {
                    "text": "send(refunds[refundAddresses[x]])"
                  },
                  "startColumn": 39,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_SEND"
          },
          "ruleId": "UncheckedLowCalls_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {
                    "text": "constructor(){refundAddresses.push(0x79B483371E87d664cd39491b5F06250165e4b184);refundAddresses.push(0x79B483371E87d664cd39491b5F06250165e4b185);}"
                  },
                  "startColumn": 4,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "for(uinti=lastCreditorPayedOut;i<creditorAmounts.length;i++){debt+=creditorAmounts[i];}"
                  },
                  "startColumn": 9,
                  "startLine": 94
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_EXTRA_GAS_IN_LOOPS"
          },
          "ruleId": "Ignore_25"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "for(uinti=0;i<lastCreditorPayedOut;i++){payout+=creditorAmounts[i];}"
                  },
                  "startColumn": 9,
                  "startLine": 100
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_EXTRA_GAS_IN_LOOPS"
          },
          "ruleId": "Ignore_25"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functiontotalDebt()returns(uintdebt){for(uinti=lastCreditorPayedOut;i<creditorAmounts.length;i++){debt+=creditorAmounts[i];}}"
                  },
                  "startColumn": 5,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN"
          },
          "ruleId": "Other_17"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functiontotalPayedOut()returns(uintpayout){for(uinti=0;i<lastCreditorPayedOut;i++){payout+=creditorAmounts[i];}}"
                  },
                  "startColumn": 5,
                  "startLine": 99
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN"
          },
          "ruleId": "Other_17"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "^"
                  },
                  "startColumn": 16,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_PRAGMAS_VERSION"
          },
          "ruleId": "Ignore_28"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functionGovernment(){profitFromCrash=msg.value;corruptElite=msg.sender;lastTimeOfNewCredit=block.timestamp;}"
                  },
                  "startColumn": 5,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functionlendGovernmentMoney(addressbuddy)returns(bool){uintamount=msg.value;if(lastTimeOfNewCredit+TWELVE_HOURS<block.timestamp){msg.sender.send(amount);creditorAddresses[creditorAddresses.length-1].send(profitFromCrash);corruptElite.send(this.balance);lastCreditorPayedOut=0;lastTimeOfNewCredit=block.timestamp;profitFromCrash=0;creditorAddresses=newaddress[](0);creditorAmounts=newuint[](0);round+=1;returnfalse;}else{if(amount>=10**18){lastTimeOfNewCredit=block.timestamp;creditorAddresses.push(msg.sender);creditorAmounts.push(amount*110/100);corruptElite.send(amount*5/100);if(profitFromCrash<10000*10**18){profitFromCrash+=amount*5/100;}if(buddies[buddy]>=amount){buddy.send(amount*5/100);}buddies[msg.sender]+=amount*110/100;if(creditorAmounts[lastCreditorPayedOut]<=address(this).balance-profitFromCrash){creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);buddies[creditorAddresses[lastCreditorPayedOut]]-=creditorAmounts[lastCreditorPayedOut];lastCreditorPayedOut+=1;}returntrue;}else{msg.sender.send(amount);returnfalse;}}}"
                  },
                  "startColumn": 5,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "function(){lendGovernmentMoney(0);}"
                  },
                  "startColumn": 5,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functiontotalDebt()returns(uintdebt){for(uinti=lastCreditorPayedOut;i<creditorAmounts.length;i++){debt+=creditorAmounts[i];}}"
                  },
                  "startColumn": 5,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functiontotalPayedOut()returns(uintpayout){for(uinti=0;i<lastCreditorPayedOut;i++){payout+=creditorAmounts[i];}}"
                  },
                  "startColumn": 5,
                  "startLine": 99
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functioninvestInTheSystem(){profitFromCrash+=msg.value;}"
                  },
                  "startColumn": 5,
                  "startLine": 106
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functioninheritToNextGeneration(addressnextGeneration){if(msg.sender==corruptElite){corruptElite=nextGeneration;}}"
                  },
                  "startColumn": 5,
                  "startLine": 111
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functiongetCreditorAddresses()returns(address[]){returncreditorAddresses;}"
                  },
                  "startColumn": 5,
                  "startLine": 117
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functiongetCreditorAmounts()returns(uint[]){returncreditorAmounts;}"
                  },
                  "startColumn": 5,
                  "startLine": 121
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "mapping(address=>uint)buddies;"
                  },
                  "startColumn": 5,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "uintconstantTWELVE_HOURS=43200;"
                  },
                  "startColumn": 5,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Securify automatically checks for vulnerabilities and bad coding practices. It runs lexical and syntactical analysis on Solidity source code."
          },
          "informationUri": "https://tool.smartdec.net/",
          "name": "SmartCheck",
          "rules": [
            {
              "id": "Arithmetic_13",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_ARRAY_LENGTH_MANIPULATION"
              }
            },
            {
              "id": "Ignore_28",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_PRAGMAS_VERSION"
              }
            },
            {
              "id": "Ignore_38",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_VISIBILITY"
              }
            },
            {
              "id": "UncheckedLowCalls_7",
              "name": "UncheckedLowCallsVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_SEND"
              }
            },
            {
              "id": "Ignore_19",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_ADDRESS_HARDCODED"
              }
            },
            {
              "id": "Ignore_25",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_EXTRA_GAS_IN_LOOPS"
              }
            },
            {
              "id": "DenialService_4",
              "name": "DenialServiceVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_GAS_LIMIT_IN_LOOPS"
              }
            },
            {
              "id": "Ignore_29",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
              }
            },
            {
              "id": "Other_17",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN"
              }
            }
          ],
          "version": "0.0.12"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "DosNumber"
        },
        {
          "kind": "contract",
          "name": "DosAuction"
        },
        {
          "kind": "contract",
          "name": "DosOneFunc"
        },
        {
          "kind": "contract",
          "name": "DosGas"
        },
        {
          "kind": "contract",
          "name": "Refunder"
        },
        {
          "kind": "contract",
          "name": "Government"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 19,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow."
          },
          "ruleId": "Arithmetic_11"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 1,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow."
          },
          "ruleId": "Arithmetic_11"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 1,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow."
          },
          "ruleId": "Arithmetic_11"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 32,
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Integer Underflow."
          },
          "ruleId": "Arithmetic_12"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow."
          },
          "ruleId": "Arithmetic_11"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow."
          },
          "ruleId": "Arithmetic_11"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow."
          },
          "ruleId": "Arithmetic_11"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Callstack Depth Attack Vulnerability."
          },
          "ruleId": "DenialService_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Callstack Depth Attack Vulnerability."
          },
          "ruleId": "DenialService_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Callstack Depth Attack Vulnerability."
          },
          "ruleId": "DenialService_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Callstack Depth Attack Vulnerability."
          },
          "ruleId": "DenialService_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Callstack Depth Attack Vulnerability."
          },
          "ruleId": "DenialService_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Timestamp Dependency."
          },
          "ruleId": "TimeManipulation_3"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Oyente runs on symbolic execution, determines which inputs cause which program branches to execute, to find potential security vulnerabilities. Oyente works directly with EVM bytecode without access high level representation and does not provide soundness nor completeness."
          },
          "informationUri": "https://oyente.tech/",
          "name": "Oyente",
          "rules": [
            {
              "id": "Arithmetic_11",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer Overflow."
              }
            },
            {
              "id": "Arithmetic_12",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer Underflow."
              }
            },
            {
              "id": "DenialService_2",
              "name": "DenialServiceVulnerability",
              "shortDescription": {
                "text": "Callstack Depth Attack Vulnerability."
              }
            },
            {
              "id": "TimeManipulation_3",
              "name": "TimeManipulationVulnerability",
              "shortDescription": {
                "text": "Timestamp Dependency."
              }
            }
          ],
          "version": "0.4.25"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "results": [],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Maian is a tool for automatic detection of buggy Ethereum smart contracts of three different types prodigal, suicidal and greedy."
          },
          "informationUri": "https://github.com/ivicanikolicsg/MAIAN",
          "name": "Maian",
          "rules": [],
          "version": "5.10"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "function",
          "name": "0x263e5d3c"
        },
        {
          "kind": "function",
          "name": "bid()"
        },
        {
          "kind": "function",
          "name": "refundAll()"
        },
        {
          "kind": "function",
          "name": "_fallthrough"
        },
        {
          "kind": "function",
          "name": "creditorAddresses(uint256)"
        },
        {
          "kind": "function",
          "name": "totalDebt()"
        },
        {
          "kind": "function",
          "name": "getCreditorAmounts()"
        },
        {
          "kind": "function",
          "name": "creditorAmounts(uint256)"
        },
        {
          "kind": "function",
          "name": "getCreditorAddresses()"
        },
        {
          "kind": "function",
          "name": "totalPayedOut()"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "0x263e5d3c"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "bid()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Reentrancy"
          },
          "ruleId": "Reentrancy_14"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "bid()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Transaction Ordering Dependence"
          },
          "ruleId": "FrontRunning_5"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "refundAll()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Reentrancy"
          },
          "ruleId": "Reentrancy_14"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "refundAll()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked Low Level Call"
          },
          "ruleId": "UncheckedLowCalls_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Time Manipulation"
          },
          "ruleId": "TimeManipulation_6"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "creditorAddresses(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Reentrancy"
          },
          "ruleId": "Reentrancy_14"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "totalDebt()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Reentrancy"
          },
          "ruleId": "Reentrancy_14"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAmounts()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 122
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "Time Manipulation"
          },
          "ruleId": "TimeManipulation_6"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked Low Level Call"
          },
          "ruleId": "UncheckedLowCalls_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked Low Level Call"
          },
          "ruleId": "UncheckedLowCalls_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAmounts()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 121
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "creditorAmounts(uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked Low Level Call"
          },
          "ruleId": "UncheckedLowCalls_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked Low Level Call"
          },
          "ruleId": "UncheckedLowCalls_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAddresses()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 117
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked Low Level Call"
          },
          "ruleId": "UncheckedLowCalls_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Time Manipulation"
          },
          "ruleId": "TimeManipulation_6"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked Low Level Call"
          },
          "ruleId": "UncheckedLowCalls_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "totalPayedOut()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 101
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Reentrancy"
          },
          "ruleId": "Reentrancy_14"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked Low Level Call"
          },
          "ruleId": "UncheckedLowCalls_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAddresses()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 118
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Underflow"
          },
          "ruleId": "Arithmetic_20"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Transaction Ordering Dependence"
          },
          "ruleId": "FrontRunning_5"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Reentrancy"
          },
          "ruleId": "Reentrancy_14"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Reentrancy"
          },
          "ruleId": "Reentrancy_14"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_fallthrough"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Reentrancy"
          },
          "ruleId": "Reentrancy_14"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Conkas is based on symbolic execution, determines which inputs cause which program branches to execute, to find potential security vulnerabilities. Conkas uses rattle to lift bytecode to a high level representation."
          },
          "informationUri": "https://github.com/nveloso/conkas",
          "name": "Conkas",
          "rules": [
            {
              "id": "Arithmetic_19",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer_Overflow"
              }
            },
            {
              "id": "Reentrancy_14",
              "name": "ReentrancyVulnerability",
              "shortDescription": {
                "text": "Reentrancy"
              }
            },
            {
              "id": "FrontRunning_5",
              "name": "FrontRunningVulnerability",
              "shortDescription": {
                "text": "Transaction Ordering Dependence"
              }
            },
            {
              "id": "UncheckedLowCalls_9",
              "name": "UncheckedLowCallsVulnerability",
              "shortDescription": {
                "text": "Unchecked Low Level Call"
              }
            },
            {
              "id": "TimeManipulation_6",
              "name": "TimeManipulationVulnerability",
              "shortDescription": {
                "text": "Time Manipulation"
              }
            },
            {
              "id": "Arithmetic_20",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer_Underflow"
              }
            }
          ],
          "version": "1.0.0"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {
                    "text": "currentFrontrunner.send(currentBid)"
                  },
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Reachable ether leak to sender"
          },
          "ruleId": "AccessControl_5"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "address[] public creditorAddresses"
                  },
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "INVALID instruction"
          },
          "ruleId": "Other_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "uint[] public creditorAmounts"
                  },
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "INVALID instruction"
          },
          "ruleId": "Other_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "block.timestamp"
                  },
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "Warning TIMESTAMP instruction used"
          },
          "ruleId": "TimeManipulation_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "block.timestamp"
                  },
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Warning TIMESTAMP instruction used"
          },
          "ruleId": "TimeManipulation_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "msg.sender.send(amount)"
                  },
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Returned value at CALL instruction is not used"
          },
          "ruleId": "UncheckedLowCalls_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "msg.sender.send(amount)"
                  },
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Reachable external call to sender"
          },
          "ruleId": "AccessControl_7"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Manticore is a symbolic execution tool for analysis of smart contracts and binaries."
          },
          "informationUri": "https://github.com/trailofbits/manticore",
          "name": "Manticore",
          "rules": [
            {
              "id": "AccessControl_5",
              "name": "AccessControlVulnerability",
              "shortDescription": {
                "text": "Reachable ether leak to sender"
              }
            },
            {
              "id": "Other_2",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "INVALID instruction"
              }
            },
            {
              "id": "TimeManipulation_1",
              "name": "TimeManipulationVulnerability",
              "shortDescription": {
                "text": "Warning TIMESTAMP instruction used"
              }
            },
            {
              "id": "UncheckedLowCalls_1",
              "name": "UncheckedLowCallsVulnerability",
              "shortDescription": {
                "text": "Returned value at CALL instruction is not used"
              }
            },
            {
              "id": "AccessControl_7",
              "name": "AccessControlVulnerability",
              "shortDescription": {
                "text": "Reachable external call to sender"
              }
            }
          ],
          "version": "0.3.5"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "DosNumber"
        },
        {
          "kind": "contract",
          "name": "DosAuction"
        },
        {
          "kind": "contract",
          "name": "DosOneFunc"
        },
        {
          "kind": "contract",
          "name": "DosGas"
        },
        {
          "kind": "contract",
          "name": "Refunder"
        },
        {
          "kind": "contract",
          "name": "Government"
        }
      ],
      "results": [],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "An analysis tool to detect honeypots in Ethereum smart contracts"
          },
          "informationUri": "https://honeybadger.uni.lu/",
          "name": "HoneyBadger",
          "rules": [],
          "version": "1.8.16"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "function",
          "name": "insertNnumbers(uint256,uint256)"
        },
        {
          "kind": "function",
          "name": "clearDOS()"
        },
        {
          "kind": "function",
          "name": "bid()"
        },
        {
          "kind": "function",
          "name": "ifillArray()"
        },
        {
          "kind": "function",
          "name": "addCreditors()"
        },
        {
          "kind": "function",
          "name": "emptyCreditors()"
        },
        {
          "kind": "function",
          "name": "refundAll()"
        },
        {
          "kind": "function",
          "name": "getCreditorAmounts()"
        },
        {
          "kind": "function",
          "name": "getCreditorAddresses()"
        },
        {
          "kind": "function",
          "name": "fallback"
        },
        {
          "kind": "function",
          "name": "lendGovernmentMoney(address)"
        },
        {
          "kind": "function",
          "name": "totalPayedOut()"
        },
        {
          "kind": "function",
          "name": "_function_0xce43b0c0"
        },
        {
          "kind": "function",
          "name": "_function_0xf42d1d30"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "insertNnumbers(uint256,uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {
                    "text": "array.length += 1"
                  },
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "insertNnumbers(uint256,uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {
                    "text": "numElements++"
                  },
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "insertNnumbers(uint256,uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {
                    "text": "array[numElements++]"
                  },
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Exception state"
          },
          "ruleId": "Other_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "clearDOS()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {
                    "text": "contract DosNumber {\n\n    uint numElements = 0;\n    uint[] array;\n\n    function insertNnumbers(uint value,uint numbers) public {\n\n        // Gas DOS if number > 382 more or less, it depends on actual gas limit\n        // <yes> <report> DENIAL_OF_SERVICE\n        for(uint i=0;i<numbers;i++) {\n            if(numElements == array.length) {\n                array.length += 1;\n            }\n            array[numElements++] = value;\n        }\n    }\n\n    function clear() public {\n        require(numElements>1500);\n        numElements = 0;\n    }\n\n    // Gas DOS clear\n    function clearDOS() public {\n\n        // number depends on actual gas limit\n        require(numElements>1500);\n        array = new uint[](0);\n        numElements = 0;\n    }\n\n    function getLengthArray() public view returns(uint) {\n        return numElements;\n    }\n\n    function getRealLengthArray() public view returns(uint) {\n        return array.length;\n    }\n}"
                  },
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "bid()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {
                    "text": "currentFrontrunner.send(currentBid)"
                  },
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Ether send"
          },
          "ruleId": "AccessControl_13"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "bid()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {
                    "text": "currentFrontrunner.send(currentBid)"
                  },
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Transaction order dependence"
          },
          "ruleId": "FrontRunning_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "ifillArray()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_simple.sol"
                },
                "region": {
                  "snippet": {
                    "text": "contract DosOneFunc {\n\n    address[] listAddresses;\n\n    function ifillArray() public returns (bool){\n        if(listAddresses.length<1500) {\n            // <yes> <report> DENIAL_OF_SERVICE\n            for(uint i=0;i<350;i++) {\n                listAddresses.push(msg.sender);\n            }\n            return true;\n\n        } else {\n            listAddresses = new address[](0);\n            return false;\n        }\n    }\n}"
                  },
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "addCreditors()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "snippet": {
                    "text": "github.com/SmartCo"
                  },
                  "startLine": 2
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "emptyCreditors()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "snippet": {
                    "text": "contract DosGas {\n\n    address[] creditorAddresses;\n    bool win = false;\n\n    function emptyCreditors() public {\n        // <yes> <report> DENIAL_OF_SERVICE\n        if(creditorAddresses.length>1500) {\n            creditorAddresses = new address[](0);\n            win = true;\n        }\n    }\n\n    function addCreditors() public returns (bool) {\n        for(uint i=0;i<350;i++) {\n          creditorAddresses.push(msg.sender);\n        }\n        return true;\n    }\n\n    function iWin() public view returns (bool) {\n        return win;\n    }\n\n    function numberCreditors() public view returns (uint) {\n        return creditorAddresses.length;\n    }\n}"
                  },
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "refundAll()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {
                    "text": "refundAddresses[x].send(refunds[refundAddresses[x]])"
                  },
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Multiple Calls"
          },
          "ruleId": "Ignore_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAmounts()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "function getCreditorAmounts() returns (uint[]) {\n         return creditorAmounts;\n     }"
                  },
                  "startLine": 121
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAddresses()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "function getCreditorAddresses() returns (address[]) {\n         return creditorAddresses;\n     }"
                  },
                  "startLine": 117
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "lastTimeOfNewCredit + TWELVE_HOURS"
                  },
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "msg.sender.send(amount)"
                  },
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Multiple Calls"
          },
          "ruleId": "Ignore_1"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "msg.sender.send(amount)"
                  },
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creditorAddresses[creditorAddresses.length - 1]"
                  },
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Exception state"
          },
          "ruleId": "Other_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash)"
                  },
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Dependence on predictable environment variable"
          },
          "ruleId": "Other_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash)"
                  },
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Ether send"
          },
          "ruleId": "AccessControl_13"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash)"
                  },
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Multiple Calls"
          },
          "ruleId": "Ignore_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash)"
                  },
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Transaction order dependence"
          },
          "ruleId": "FrontRunning_1"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash)"
                  },
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "corruptElite.send(this.balance)"
                  },
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Dependence on predictable environment variable"
          },
          "ruleId": "Other_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "corruptElite.send(this.balance)"
                  },
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Transaction order dependence"
          },
          "ruleId": "FrontRunning_1"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "corruptElite.send(this.balance)"
                  },
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "lendGovernmentMoney(address)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "corruptElite.send(amount * 5/100)"
                  },
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Multiple Calls"
          },
          "ruleId": "Ignore_1"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "corruptElite.send(amount * 5/100)"
                  },
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "lendGovernmentMoney(address)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "buddy.send(amount * 5/100)"
                  },
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut])"
                  },
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "msg.sender.send(amount)"
                  },
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unchecked CALL return value"
          },
          "ruleId": "UncheckedLowCalls_3"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "totalPayedOut()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "creditorAmounts[i]"
                  },
                  "startLine": 101
                }
              }
            }
          ],
          "message": {
            "text": "Exception state"
          },
          "ruleId": "Other_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAmounts()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "return creditorAmounts"
                  },
                  "startLine": 122
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAmounts()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "return creditorAmounts"
                  },
                  "startLine": 122
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_function_0xce43b0c0"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "address[] public creditorAddresses"
                  },
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Exception state"
          },
          "ruleId": "Other_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAddresses()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "return creditorAddresses"
                  },
                  "startLine": 118
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAddresses()"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "return creditorAddresses"
                  },
                  "startLine": 118
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_function_0xf42d1d30"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "uint[] public creditorAmounts"
                  },
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Exception state"
          },
          "ruleId": "Other_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "lendGovernmentMoney(address)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "contract Government {\n\n     // Global Variables\n     uint32 public lastCreditorPayedOut;\n     uint public lastTimeOfNewCredit;\n     uint public profitFromCrash;\n     address[] public creditorAddresses;\n     uint[] public creditorAmounts;\n     address public corruptElite;\n     mapping (address => uint) buddies;\n     uint constant TWELVE_HOURS = 43200;\n     uint8 public round;\n\n     function Government() {\n         // The corrupt elite establishes a new government\n         // this is the commitment of the corrupt Elite - everything that can not be saved from a crash\n         profitFromCrash = msg.value;\n         corruptElite = msg.sender;\n         lastTimeOfNewCredit = block.timestamp;\n     }\n\n     function lendGovernmentMoney(address buddy) returns (bool) {\n         uint amount = msg.value;\n         // check if the system already broke down. If for 12h no new creditor gives new credit to the system it will brake down.\n         // 12h are on average = 60*60*12/12.5 = 3456\n         if (lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp) {\n             // Return money to sender\n             msg.sender.send(amount);\n             // Sends all contract money to the last creditor\n             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);\n             corruptElite.send(this.balance);\n             // Reset contract state\n             lastCreditorPayedOut = 0;\n             lastTimeOfNewCredit = block.timestamp;\n             profitFromCrash = 0;\n            // <yes> <report> DENIAL_OF_SERVICE\n             creditorAddresses = new address[](0);\n            // <yes> <report> DENIAL_OF_SERVICE\n             creditorAmounts = new uint[](0);\n             round += 1;\n             return false;\n         }\n         else {\n             // the system needs to collect at least 1% of the profit from a crash to stay alive\n             if (amount >= 10 ** 18) {\n                 // the System has received fresh money, it will survive at leat 12h more\n                 lastTimeOfNewCredit = block.timestamp;\n                 // register the new creditor and his amount with 10% interest rate\n                 creditorAddresses.push(msg.sender);\n                 creditorAmounts.push(amount * 110 / 100);\n                 // now the money is distributed\n                 // first the corrupt elite grabs 5% - thieves!\n                 corruptElite.send(amount * 5/100);\n                 // 5% are going into the economy (they will increase the value for the person seeing the crash comming)\n                 if (profitFromCrash < 10000 * 10**18) {\n                     profitFromCrash += amount * 5/100;\n                 }\n                 // if you have a buddy in the government (and he is in the creditor list) he can get 5% of your credits.\n                 // Make a deal with him.\n                 if(buddies[buddy] >= amount) {\n                     buddy.send(amount * 5/100);\n                 }\n                 buddies[msg.sender] += amount * 110 / 100;\n                 // 90% of the money will be used to pay out old creditors\n                 if (creditorAmounts[lastCreditorPayedOut] <= address(this).balance - profitFromCrash) {\n                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);\n                     buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut];\n                     lastCreditorPayedOut += 1;\n                 }\n                 return true;\n             }\n             else {\n                 msg.sender.send(amount);\n                 return false;\n             }\n         }\n     }\n\n     // fallback function\n     function() {\n         lendGovernmentMoney(0);\n     }\n\n     function totalDebt() returns (uint debt) {\n         for(uint i=lastCreditorPayedOut; i<creditorAmounts.length; i++){\n             debt += creditorAmounts[i];\n         }\n     }\n\n     function totalPayedOut() returns (uint payout) {\n         for(uint i=0; i<lastCreditorPayedOut; i++){\n             payout += creditorAmounts[i];\n         }\n     }\n\n     // better don't do it (unless you are the corrupt elite and you want to establish trust in the system)\n     function investInTheSystem() {\n         profitFromCrash += msg.value;\n     }\n\n     // From time to time the corrupt elite inherits it's power to the next generation\n     function inheritToNextGeneration(address nextGeneration) {\n         if (msg.sender == corruptElite) {\n             corruptElite = nextGeneration;\n         }\n     }\n\n     function getCreditorAddresses() returns (address[]) {\n         return creditorAddresses;\n     }\n\n     function getCreditorAmounts() returns (uint[]) {\n         return creditorAmounts;\n     }\n }"
                  },
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {
                    "text": "contract Government {\n\n     // Global Variables\n     uint32 public lastCreditorPayedOut;\n     uint public lastTimeOfNewCredit;\n     uint public profitFromCrash;\n     address[] public creditorAddresses;\n     uint[] public creditorAmounts;\n     address public corruptElite;\n     mapping (address => uint) buddies;\n     uint constant TWELVE_HOURS = 43200;\n     uint8 public round;\n\n     function Government() {\n         // The corrupt elite establishes a new government\n         // this is the commitment of the corrupt Elite - everything that can not be saved from a crash\n         profitFromCrash = msg.value;\n         corruptElite = msg.sender;\n         lastTimeOfNewCredit = block.timestamp;\n     }\n\n     function lendGovernmentMoney(address buddy) returns (bool) {\n         uint amount = msg.value;\n         // check if the system already broke down. If for 12h no new creditor gives new credit to the system it will brake down.\n         // 12h are on average = 60*60*12/12.5 = 3456\n         if (lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp) {\n             // Return money to sender\n             msg.sender.send(amount);\n             // Sends all contract money to the last creditor\n             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);\n             corruptElite.send(this.balance);\n             // Reset contract state\n             lastCreditorPayedOut = 0;\n             lastTimeOfNewCredit = block.timestamp;\n             profitFromCrash = 0;\n            // <yes> <report> DENIAL_OF_SERVICE\n             creditorAddresses = new address[](0);\n            // <yes> <report> DENIAL_OF_SERVICE\n             creditorAmounts = new uint[](0);\n             round += 1;\n             return false;\n         }\n         else {\n             // the system needs to collect at least 1% of the profit from a crash to stay alive\n             if (amount >= 10 ** 18) {\n                 // the System has received fresh money, it will survive at leat 12h more\n                 lastTimeOfNewCredit = block.timestamp;\n                 // register the new creditor and his amount with 10% interest rate\n                 creditorAddresses.push(msg.sender);\n                 creditorAmounts.push(amount * 110 / 100);\n                 // now the money is distributed\n                 // first the corrupt elite grabs 5% - thieves!\n                 corruptElite.send(amount * 5/100);\n                 // 5% are going into the economy (they will increase the value for the person seeing the crash comming)\n                 if (profitFromCrash < 10000 * 10**18) {\n                     profitFromCrash += amount * 5/100;\n                 }\n                 // if you have a buddy in the government (and he is in the creditor list) he can get 5% of your credits.\n                 // Make a deal with him.\n                 if(buddies[buddy] >= amount) {\n                     buddy.send(amount * 5/100);\n                 }\n                 buddies[msg.sender] += amount * 110 / 100;\n                 // 90% of the money will be used to pay out old creditors\n                 if (creditorAmounts[lastCreditorPayedOut] <= address(this).balance - profitFromCrash) {\n                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);\n                     buddies[creditorAddresses[lastCreditorPayedOut]] -= creditorAmounts[lastCreditorPayedOut];\n                     lastCreditorPayedOut += 1;\n                 }\n                 return true;\n             }\n             else {\n                 msg.sender.send(amount);\n                 return false;\n             }\n         }\n     }\n\n     // fallback function\n     function() {\n         lendGovernmentMoney(0);\n     }\n\n     function totalDebt() returns (uint debt) {\n         for(uint i=lastCreditorPayedOut; i<creditorAmounts.length; i++){\n             debt += creditorAmounts[i];\n         }\n     }\n\n     function totalPayedOut() returns (uint payout) {\n         for(uint i=0; i<lastCreditorPayedOut; i++){\n             payout += creditorAmounts[i];\n         }\n     }\n\n     // better don't do it (unless you are the corrupt elite and you want to establish trust in the system)\n     function investInTheSystem() {\n         profitFromCrash += msg.value;\n     }\n\n     // From time to time the corrupt elite inherits it's power to the next generation\n     function inheritToNextGeneration(address nextGeneration) {\n         if (msg.sender == corruptElite) {\n             corruptElite = nextGeneration;\n         }\n     }\n\n     function getCreditorAddresses() returns (address[]) {\n         return creditorAddresses;\n     }\n\n     function getCreditorAmounts() returns (uint[]) {\n         return creditorAmounts;\n     }\n }"
                  },
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Mythril analyses EVM bytecode using symbolic analysis, taint analysis and control flow checking to detect a variety of security vulnerabilities."
          },
          "informationUri": "https://mythx.io/",
          "name": "Mythril",
          "rules": [
            {
              "fullDescription": {
                "text": "A possible integer overflow exists in the function `insertNnumbers(uint256,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."
              },
              "id": "Arithmetic_4",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer Overflow"
              }
            },
            {
              "fullDescription": {
                "text": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. "
              },
              "id": "Other_9",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "Exception state"
              }
            },
            {
              "fullDescription": {
                "text": "In the function `bid()` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `bid()`.\n\nThere is a check on storage index 1. This storage slot can be written to by calling the function `bid()`.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `bid()`."
              },
              "id": "AccessControl_13",
              "name": "AccessControlVulnerability",
              "shortDescription": {
                "text": "Ether send"
              }
            },
            {
              "fullDescription": {
                "text": "A possible transaction order independence vulnerability exists in function bid(). The value or direction of the call statement is determined from a tainted storage location"
              },
              "id": "FrontRunning_1",
              "name": "FrontRunningVulnerability",
              "shortDescription": {
                "text": "Transaction order dependence"
              }
            },
            {
              "fullDescription": {
                "text": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 431\nCall at address: 431\nCall at address: 431\n"
              },
              "id": "Ignore_1",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "Multiple Calls"
              }
            },
            {
              "fullDescription": {
                "text": "The return value of an external call is not checked. Note that execution continue even if the called contract throws."
              },
              "id": "UncheckedLowCalls_3",
              "name": "UncheckedLowCallsVulnerability",
              "shortDescription": {
                "text": "Unchecked CALL return value"
              }
            },
            {
              "fullDescription": {
                "text": "In the function `fallback` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n"
              },
              "id": "Other_7",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "Dependence on predictable environment variable"
              }
            }
          ],
          "version": "0.4.25"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "DosNumber"
        },
        {
          "kind": "contract",
          "name": "DosAuction"
        },
        {
          "kind": "contract",
          "name": "DosOneFunc"
        },
        {
          "kind": "contract",
          "name": "DosGas"
        },
        {
          "kind": "contract",
          "name": "Refunder"
        },
        {
          "kind": "contract",
          "name": "Government"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 19,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "overflow_bugs"
          },
          "ruleId": "Arithmetic_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 21,
                  "startLine": 2
                }
              }
            }
          ],
          "message": {
            "text": "overflow_bugs"
          },
          "ruleId": "Arithmetic_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 21,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "concurrency_bug"
          },
          "ruleId": "Ignore_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 21,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "concurrency_bug"
          },
          "ruleId": "Ignore_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 101
                }
              }
            }
          ],
          "message": {
            "text": "overflow_bugs"
          },
          "ruleId": "Arithmetic_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 122
                }
              }
            }
          ],
          "message": {
            "text": "overflow_bugs"
          },
          "ruleId": "Arithmetic_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "overflow_bugs"
          },
          "ruleId": "Arithmetic_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 122
                }
              }
            }
          ],
          "message": {
            "text": "overflow_bugs"
          },
          "ruleId": "Arithmetic_7"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 26,
                  "startLine": 100
                }
              }
            }
          ],
          "message": {
            "text": "truncation_bugs"
          },
          "ruleId": "Arithmetic_9"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "callstack_bug"
          },
          "ruleId": "DenialService_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "callstack_bug"
          },
          "ruleId": "DenialService_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "callstack_bug"
          },
          "ruleId": "DenialService_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "callstack_bug"
          },
          "ruleId": "DenialService_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "callstack_bug"
          },
          "ruleId": "DenialService_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "callstack_bug"
          },
          "ruleId": "DenialService_1"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "concurrency_bug"
          },
          "ruleId": "Ignore_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "concurrency_bug"
          },
          "ruleId": "Ignore_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "concurrency_bug"
          },
          "ruleId": "Ignore_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "concurrency_bug"
          },
          "ruleId": "Ignore_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "time_dependency_bug"
          },
          "ruleId": "TimeManipulation_2"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Osiris is an analysis tool to detect integer bugs in Ethereum smart contracts. Osiris is based on Oyente."
          },
          "informationUri": "https://github.com/christoftorres/Osiris",
          "name": "Osiris",
          "rules": [
            {
              "id": "Arithmetic_7",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "overflow_bugs"
              }
            },
            {
              "id": "Ignore_2",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "concurrency_bug"
              }
            },
            {
              "id": "Arithmetic_9",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "truncation_bugs"
              }
            },
            {
              "id": "DenialService_1",
              "name": "DenialServiceVulnerability",
              "shortDescription": {
                "text": "callstack_bug"
              }
            },
            {
              "id": "TimeManipulation_2",
              "name": "TimeManipulationVulnerability",
              "shortDescription": {
                "text": "time_dependency_bug"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "dos_number"
        },
        {
          "kind": "contract",
          "name": "auction"
        },
        {
          "kind": "contract",
          "name": "dos_simple"
        },
        {
          "kind": "contract",
          "name": "dos_address"
        },
        {
          "kind": "contract",
          "name": "send_loop"
        },
        {
          "kind": "contract",
          "name": "list_dos"
        }
      ],
      "results": [
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 3,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 3,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 3,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 5,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 5,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 7,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 5,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 5,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 5,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 3,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 11,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 1,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 1,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 2,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "max-line-length"
          },
          "ruleId": "Ignore_41"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 2,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "max-line-length"
          },
          "ruleId": "Ignore_41"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 2,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "max-line-length"
          },
          "ruleId": "Ignore_41"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 46
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 2,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "max-line-length"
          },
          "ruleId": "Ignore_41"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 22,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 18,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 90
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 94
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 97
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 99
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 100
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 101
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 102
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 103
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 106
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 107
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 108
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 111
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 112
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 14,
                  "startLine": 113
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 114
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 115
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 117
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 118
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 119
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 121
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 122
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 123
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 2,
                  "startLine": 124
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Open source project for linting solidity code. This project provide both security and style guide validations."
          },
          "informationUri": "https://protofire.github.io/solhint/",
          "name": "Solhint",
          "rules": [
            {
              "fullDescription": {
                "text": "Expected indentation of 4 spaces but found 2"
              },
              "id": "Ignore_40",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "indent"
              }
            },
            {
              "fullDescription": {
                "text": "Line length must be no more than 120 but current length is 125."
              },
              "id": "Ignore_41",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "max-line-length"
              }
            }
          ],
          "version": "3.3.2"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "DosNumber"
        },
        {
          "kind": "contract",
          "name": "DosAuction"
        },
        {
          "kind": "contract",
          "name": "DosOneFunc"
        },
        {
          "kind": "contract",
          "name": "DosGas"
        },
        {
          "kind": "contract",
          "name": "Refunder"
        },
        {
          "kind": "contract",
          "name": "Government"
        }
      ],
      "results": [
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "TODReceiver"
          },
          "ruleId": "FrontRunning_3"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "UnhandledException"
          },
          "ruleId": "UncheckedLowCalls_4"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "TODTransfer"
          },
          "ruleId": "FrontRunning_4"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "TODAmount"
          },
          "ruleId": "FrontRunning_2"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "MissingInputValidation"
          },
          "ruleId": "Ignore_3"
        },
        {
          "level": "none",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "DAOConstantGas"
          },
          "ruleId": "Reentrancy_7"
        },
        {
          "level": "none",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "UnrestrictedEtherFlow"
          },
          "ruleId": "AccessControl_17"
        },
        {
          "level": "none",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "TODReceiver"
          },
          "ruleId": "FrontRunning_3"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "UnhandledException"
          },
          "ruleId": "UncheckedLowCalls_4"
        },
        {
          "level": "none",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "TODTransfer"
          },
          "ruleId": "FrontRunning_4"
        },
        {
          "level": "none",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "TODAmount"
          },
          "ruleId": "FrontRunning_2"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "MissingInputValidation"
          },
          "ruleId": "Ignore_3"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "MissingInputValidation"
          },
          "ruleId": "Ignore_3"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "DAOConstantGas"
          },
          "ruleId": "Reentrancy_7"
        },
        {
          "level": "none",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "UnrestrictedEtherFlow"
          },
          "ruleId": "AccessControl_17"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Securify uses formal verification, also relying on static analysis checks. Securify\u2019s analysis consists of two steps. First, it symbolically analyzes the contract\u2019s dependency graph to extract precise semantic information from the code. Then, it checks compliance and violation patterns that capture sufficient conditions for proving if a property holds or not."
          },
          "informationUri": "https://github.com/eth-sri/securify2",
          "name": "Securify",
          "rules": [
            {
              "id": "FrontRunning_3",
              "name": "FrontRunningVulnerability",
              "shortDescription": {
                "text": "TODReceiver"
              }
            },
            {
              "id": "UncheckedLowCalls_4",
              "name": "UncheckedLowCallsVulnerability",
              "shortDescription": {
                "text": "UnhandledException"
              }
            },
            {
              "id": "FrontRunning_4",
              "name": "FrontRunningVulnerability",
              "shortDescription": {
                "text": "TODTransfer"
              }
            },
            {
              "id": "FrontRunning_2",
              "name": "FrontRunningVulnerability",
              "shortDescription": {
                "text": "TODAmount"
              }
            },
            {
              "id": "Ignore_3",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "MissingInputValidation"
              }
            },
            {
              "id": "Reentrancy_7",
              "name": "ReentrancyVulnerability",
              "shortDescription": {
                "text": "DAO"
              }
            },
            {
              "id": "AccessControl_17",
              "name": "AccessControlVulnerability",
              "shortDescription": {
                "text": "UnrestrictedEtherFlow"
              }
            }
          ],
          "version": "0.4.25"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_number.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/auction.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_simple.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/dos_address.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/send_loop.sol"
          },
          "sourceLanguage": "Solidity"
        },
        {
          "location": {
            "uri": "dataset/denial_of_service/list_dos.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "results": [
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "insertNnumbers"
                },
                {
                  "kind": "contract",
                  "name": "DosNumber"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "endLine": 24,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "clear"
                },
                {
                  "kind": "contract",
                  "name": "DosNumber"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "endLine": 29,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "clearDOS"
                },
                {
                  "kind": "contract",
                  "name": "DosNumber"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "endLine": 38,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getLengthArray"
                },
                {
                  "kind": "contract",
                  "name": "DosNumber"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "endLine": 42,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getRealLengthArray"
                },
                {
                  "kind": "contract",
                  "name": "DosNumber"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_number.sol"
                },
                "region": {
                  "endLine": 46,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "bid"
                },
                {
                  "kind": "contract",
                  "name": "DosAuction"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "endLine": 28,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/auction.sol"
                },
                "region": {
                  "endLine": 7,
                  "snippet": {
                    "text": "^0.4.15"
                  },
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "solc-version"
          },
          "ruleId": "Ignore_17"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "ifillArray"
                },
                {
                  "kind": "contract",
                  "name": "DosOneFunc"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_simple.sol"
                },
                "region": {
                  "endLine": 26,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "emptyCreditors"
                },
                {
                  "kind": "contract",
                  "name": "DosGas"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "endLine": 20,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "addCreditors"
                },
                {
                  "kind": "contract",
                  "name": "DosGas"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "endLine": 27,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "iWin"
                },
                {
                  "kind": "contract",
                  "name": "DosGas"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "endLine": 31,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "numberCreditors"
                },
                {
                  "kind": "contract",
                  "name": "DosGas"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/dos_address.sol"
                },
                "region": {
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "error",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "variable",
                  "name": "refunds"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "endLine": 13,
                  "startLine": 13
                }
              }
            },
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "refundAll"
                },
                {
                  "kind": "contract",
                  "name": "Refunder"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "endLine": 26,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "uninitialized-state"
          },
          "ruleId": "Other_14"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "variable",
                  "name": "x"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "endLine": 22,
                  "startLine": 22
                }
              }
            },
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "refundAll"
                },
                {
                  "kind": "contract",
                  "name": "Refunder"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "endLine": 26,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "uninitialized-local"
          },
          "ruleId": "Other_13"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "refundAll"
                },
                {
                  "kind": "contract",
                  "name": "Refunder"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "endLine": 26,
                  "startLine": 21
                }
              }
            },
            {
              "logicalLocations": [],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "endLine": 24,
                  "snippet": {
                    "text": "require(bool)(refundAddresses[x].send(refunds[refundAddresses[x]]))"
                  },
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "calls-loop"
          },
          "ruleId": "DenialService_3"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "refundAll"
                },
                {
                  "kind": "contract",
                  "name": "Refunder"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/send_loop.sol"
                },
                "region": {
                  "endLine": 26,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "lendGovernmentMoney"
                },
                {
                  "kind": "contract",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 86,
                  "startLine": 31
                }
              }
            },
            {
              "logicalLocations": [],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 85,
                  "snippet": {
                    "text": "lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp"
                  },
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "timestamp"
          },
          "ruleId": "TimeManipulation_4"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "fallback"
                },
                {
                  "kind": "contract",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "totalDebt"
                },
                {
                  "kind": "contract",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 97,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "totalPayedOut"
                },
                {
                  "kind": "contract",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 103,
                  "startLine": 99
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "investInTheSystem"
                },
                {
                  "kind": "contract",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 108,
                  "startLine": 106
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "inheritToNextGeneration"
                },
                {
                  "kind": "contract",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 115,
                  "startLine": 111
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAddresses"
                },
                {
                  "kind": "contract",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 119,
                  "startLine": 117
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getCreditorAmounts"
                },
                {
                  "kind": "contract",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 123,
                  "startLine": 121
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 8,
                  "snippet": {
                    "text": "^0.4.0"
                  },
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "solc-version"
          },
          "ruleId": "Ignore_17"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "Government"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/denial_of_service/list_dos.sol"
                },
                "region": {
                  "endLine": 29,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "naming-convention"
          },
          "ruleId": "Ignore_12"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Slither is a Solidity static analysis framework written in Python 3. It runs a suite of vulnerability detectors and prints visual information about contract details. Slither enables developers to find vulnerabilities, enhance their code comphrehension, and quickly prototype custom analyses."
          },
          "informationUri": "https://github.com/crytic/slither",
          "name": "Slither",
          "rules": [
            {
              "fullDescription": {
                "text": "DosNumber.insertNnumbers (/data/dos_number.sol#14-24) should be declared external\n"
              },
              "id": "Ignore_11",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "external-function"
              }
            },
            {
              "fullDescription": {
                "text": "Detected issues with version pragma in /data/auction.sol:\n\t- pragma solidity^0.4.15 (/data/auction.sol#7): it allows old versions\n"
              },
              "id": "Ignore_17",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "solc-version"
              }
            },
            {
              "fullDescription": {
                "text": "Refunder.refunds (/data/send_loop.sol#13) is never initialized. It is used in:\n\t- refundAll (/data/send_loop.sol#21-26)\n"
              },
              "id": "Other_14",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "uninitialized-state"
              }
            },
            {
              "fullDescription": {
                "text": "x in Refunder.refundAll (/data/send_loop.sol#22) is a local variable never initialiazed\n"
              },
              "id": "Other_13",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "uninitialized-local"
              }
            },
            {
              "fullDescription": {
                "text": "Refunder.refundAll has external calls inside a loop:\n\t- require(bool)(refundAddresses[x].send(refunds[refundAddresses[x]])) (/data/send_loop.sol#24)\n"
              },
              "id": "DenialService_3",
              "name": "DenialServiceVulnerability",
              "shortDescription": {
                "text": "calls-loop"
              }
            },
            {
              "fullDescription": {
                "text": "Government.lendGovernmentMoney (/data/list_dos.sol#31-86) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp (/data/list_dos.sol#35-85)\n"
              },
              "id": "TimeManipulation_4",
              "name": "TimeManipulationVulnerability",
              "shortDescription": {
                "text": "timestamp"
              }
            },
            {
              "fullDescription": {
                "text": "Function 'Government.Government' (/data/list_dos.sol#23-29) is not in mixedCase\n"
              },
              "id": "Ignore_12",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "naming-convention"
              }
            }
          ],
          "version": "0.7.0"
        }
      }
    }
  ],
  "version": "2.1.0"
}