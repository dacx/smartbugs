{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "short_address_example"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functiongetBalance(addressaddr)constantreturns(uint){returnbalances[addr];}"
                  },
                  "startColumn": 5,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_DEPRECATED_CONSTRUCTIONS"
          },
          "ruleId": "Ignore_21"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "^"
                  },
                  "startColumn": 17,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_PRAGMAS_VERSION"
          },
          "ruleId": "Ignore_28"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "tx.origin"
                  },
                  "startColumn": 18,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_TX_ORIGIN"
          },
          "ruleId": "AccessControl_23"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functionMyToken(){balances[tx.origin]=10000;}"
                  },
                  "startColumn": 5,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functionsendCoin(addressto,uintamount)returns(boolsufficient){if(balances[msg.sender]<amount)returnfalse;balances[msg.sender]-=amount;balances[to]+=amount;Transfer(msg.sender,to,amount);returntrue;}"
                  },
                  "startColumn": 5,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functiongetBalance(addressaddr)constantreturns(uint){returnbalances[addr];}"
                  },
                  "startColumn": 5,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "mapping(address=>uint)balances;"
                  },
                  "startColumn": 5,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "ruleId": "Ignore_38"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Securify automatically checks for vulnerabilities and bad coding practices. It runs lexical and syntactical analysis on Solidity source code."
          },
          "informationUri": "https://tool.smartdec.net/",
          "name": "SmartCheck",
          "rules": [
            {
              "id": "Ignore_21",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_DEPRECATED_CONSTRUCTIONS"
              }
            },
            {
              "id": "Ignore_28",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_PRAGMAS_VERSION"
              }
            },
            {
              "id": "AccessControl_23",
              "name": "AccessControlVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_TX_ORIGIN"
              }
            },
            {
              "id": "Ignore_38",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_VISIBILITY"
              }
            }
          ],
          "version": "0.0.12"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "MyToken"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow."
          },
          "ruleId": "Arithmetic_11"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Oyente runs on symbolic execution, determines which inputs cause which program branches to execute, to find potential security vulnerabilities. Oyente works directly with EVM bytecode without access high level representation and does not provide soundness nor completeness."
          },
          "informationUri": "https://oyente.tech/",
          "name": "Oyente",
          "rules": [
            {
              "id": "Arithmetic_11",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer Overflow."
              }
            }
          ],
          "version": "0.4.25"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "results": [],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Maian is a tool for automatic detection of buggy Ethereum smart contracts of three different types prodigal, suicidal and greedy."
          },
          "informationUri": "https://github.com/ivicanikolicsg/MAIAN",
          "name": "Maian",
          "rules": [],
          "version": "5.10"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "function",
          "name": "sendCoin(address,uint256)"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "sendCoin(address,uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Integer_Overflow"
          },
          "ruleId": "Arithmetic_19"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Conkas is based on symbolic execution, determines which inputs cause which program branches to execute, to find potential security vulnerabilities. Conkas uses rattle to lift bytecode to a high level representation."
          },
          "informationUri": "https://github.com/nveloso/conkas",
          "name": "Conkas",
          "rules": [
            {
              "id": "Arithmetic_19",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer_Overflow"
              }
            }
          ],
          "version": "1.0.0"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "balances[addr]"
                  },
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Potentially reading uninitialized storage"
          },
          "ruleId": "Other_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "balances[to] += amount"
                  },
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Potentially reading uninitialized storage"
          },
          "ruleId": "Other_4"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "tx.origin"
                  },
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Warning ORIGIN instruction used"
          },
          "ruleId": "AccessControl_10"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Manticore is a symbolic execution tool for analysis of smart contracts and binaries."
          },
          "informationUri": "https://github.com/trailofbits/manticore",
          "name": "Manticore",
          "rules": [
            {
              "id": "Other_4",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "Potentially reading uninitialized storage"
              }
            },
            {
              "id": "AccessControl_10",
              "name": "AccessControlVulnerability",
              "shortDescription": {
                "text": "Warning ORIGIN instruction used"
              }
            }
          ],
          "version": "0.3.5"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "MyToken"
        }
      ],
      "results": [],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "An analysis tool to detect honeypots in Ethereum smart contracts"
          },
          "informationUri": "https://honeybadger.uni.lu/",
          "name": "HoneyBadger",
          "rules": [],
          "version": "1.8.16"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "function",
          "name": "sendCoin(address,uint256)"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "sendCoin(address,uint256)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {
                    "text": "balances[to] += amount"
                  },
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Integer Overflow "
          },
          "ruleId": "Arithmetic_4"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Mythril analyses EVM bytecode using symbolic analysis, taint analysis and control flow checking to detect a variety of security vulnerabilities."
          },
          "informationUri": "https://mythx.io/",
          "name": "Mythril",
          "rules": [
            {
              "fullDescription": {
                "text": "A possible integer overflow exists in the function `sendCoin(address,uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."
              },
              "id": "Arithmetic_4",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer Overflow"
              }
            }
          ],
          "version": "0.4.25"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "MyToken"
        }
      ],
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "overflow_bugs"
          },
          "ruleId": "Arithmetic_7"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Osiris is an analysis tool to detect integer bugs in Ethereum smart contracts. Osiris is based on Oyente."
          },
          "informationUri": "https://github.com/christoftorres/Osiris",
          "name": "Osiris",
          "rules": [
            {
              "id": "Arithmetic_7",
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "overflow_bugs"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "short_address_example"
        }
      ],
      "results": [
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 2,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 2,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 10,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 6,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "snippet": {},
                  "startColumn": 2,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "indent"
          },
          "ruleId": "Ignore_40"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Open source project for linting solidity code. This project provide both security and style guide validations."
          },
          "informationUri": "https://protofire.github.io/solhint/",
          "name": "Solhint",
          "rules": [
            {
              "fullDescription": {
                "text": "Expected indentation of 0 spaces but found 1"
              },
              "id": "Ignore_40",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "indent"
              }
            }
          ],
          "version": "3.3.2"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "MyToken"
        }
      ],
      "results": [],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Securify uses formal verification, also relying on static analysis checks. Securify\u2019s analysis consists of two steps. First, it symbolically analyzes the contract\u2019s dependency graph to extract precise semantic information from the code. Then, it checks compliance and violation patterns that capture sufficient conditions for proving if a property holds or not."
          },
          "informationUri": "https://github.com/eth-sri/securify2",
          "name": "Securify",
          "rules": [],
          "version": "0.4.25"
        }
      }
    },
    {
      "artifacts": [
        {
          "location": {
            "uri": "dataset/short_addresses/short_address_example.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "results": [
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "sendCoin"
                },
                {
                  "kind": "contract",
                  "name": "MyToken"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "endLine": 24,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getBalance"
                },
                {
                  "kind": "contract",
                  "name": "MyToken"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "external-function"
          },
          "ruleId": "Ignore_11"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "endLine": 7,
                  "snippet": {
                    "text": "^0.4.11"
                  },
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "solc-version"
          },
          "ruleId": "Ignore_17"
        },
        {
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "MyToken"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dataset/short_addresses/short_address_example.sol"
                },
                "region": {
                  "endLine": 16,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "naming-convention"
          },
          "ruleId": "Ignore_12"
        }
      ],
      "tool": {
        "driver": {
          "fullDescription": {
            "text": "Slither is a Solidity static analysis framework written in Python 3. It runs a suite of vulnerability detectors and prints visual information about contract details. Slither enables developers to find vulnerabilities, enhance their code comphrehension, and quickly prototype custom analyses."
          },
          "informationUri": "https://github.com/crytic/slither",
          "name": "Slither",
          "rules": [
            {
              "fullDescription": {
                "text": "MyToken.sendCoin (/data/short_address_example.sol#18-24) should be declared external\n"
              },
              "id": "Ignore_11",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "external-function"
              }
            },
            {
              "fullDescription": {
                "text": "Detected issues with version pragma in /data/short_address_example.sol:\n\t- pragma solidity^0.4.11 (/data/short_address_example.sol#7): it allows old versions\n"
              },
              "id": "Ignore_17",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "solc-version"
              }
            },
            {
              "fullDescription": {
                "text": "Function 'MyToken.MyToken' (/data/short_address_example.sol#14-16) is not in mixedCase\n"
              },
              "id": "Ignore_12",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "naming-convention"
              }
            }
          ],
          "version": "0.7.0"
        }
      }
    }
  ],
  "version": "2.1.0"
}